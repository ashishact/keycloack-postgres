version: '3.6'

services:
    postgres:
        image: postgres:latest
        ports:
            - "5432:5432"
        restart: always
        volumes:
            - postgres_data:/var/lib/postgresql/data
            # - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: appdb
    hasura:
        image: hasura/graphql-engine:v1.3.3
        ports:
            - "8080:8080"
        restart: always
        depends_on:
            - "postgres"
        environment:
            HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:A77Jy+u4tJs2iPnh+UwVIg@postgres:5432/appdb
            ## enable the console served by server
            HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
            ## enable debugging mode. It is recommended to disable this in production
            HASURA_GRAPHQL_DEV_MODE: "true"
            # HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
            ## uncomment next line to set an admin secret
            HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
    auth_postgres:
        image: postgres:latest
        # ports:
            # - "5432:5432"
        restart: always
        volumes:
            - auth_postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: keycloak
    keycloak:
        image: quay.io/keycloak/keycloak:latest
        environment:
            DB_USER: ${POSTGRES_USER}
            DB_PASSWORD: ${POSTGRES_PASSWORD}
            DB_VENDOR: POSTGRES
            JDBC_PARAMS: 'connectTimeout=60'
            DB_ADDR: auth_postgres
            DB_DATABASE: keycloak
            KEYCLOAK_USER: admin
            KEYCLOAK_PASSWORD: admin
            PROXY_ADDRESS_FORWARDING: "true"
        ports:
            - 8081:8080
        depends_on:
            - auth_postgres
volumes:
    postgres_data:
    auth_postgres_data: